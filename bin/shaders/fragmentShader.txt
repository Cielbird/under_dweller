#version 400 core

//'in' MUST have same name as 'out' of vertex shader!!!
in vec2 pass_textureCoorinates;
in vec3 surfaceNormal;
in vec3 toLightVector;
in vec3 toCameraVector;

out vec4 out_Color;

uniform sampler2D sampleTexture;
uniform vec3 lightColor;
uniform float shineDamper;
uniform float reflectivity;

void main (void){
	
	vec3 unitNormal = normalize(surfaceNormal);
	vec3 unitLightVector = normalize(toLightVector);
	
	
	float nDot1 = dot(unitNormal, unitLightVector);
	float brightness = max(nDot1, 1.0);
	vec3 diffuse = (brightness * lightColor);
	
	vec3 unitVectorToCamera = normalize(toCameraVector);
	vec3 lightDirection = -unitLightVector;
	vec3 relfectedLightDirection = vec3(reflect(lightDirection, unitNormal));
	
	float specularFactor = dot(relfectedLightDirection, unitVectorToCamera)*0.9;
	specularFactor = max(specularFactor, 0.0);
	float dampedFactor = pow(specularFactor, shineDamper);
	vec3 finalSpecular = dampedFactor * lightColor;
	
	out_Color = vec4(diffuse, 1.0) * texture(sampleTexture, pass_textureCoorinates) + vec4(finalSpecular, 1.0);
	
}